Харківський університет радіоелектроніки
Факультет комп'ютерних наук
Кафедра програмної інженерії






ЗВІТ
до практичного заняття з дисципліни
"Аналіз та рефакторінг коду"
на тему: " Методи рефакторингу коду програмного забезпечення"







Виконав ст. гр. ПЗПІ-22-5 
Разіньков Євгеній Олександрович 
   							Перевірив			 
       							ст. викладач кафедри ПІ 
                      					Сокорчук Ігор Петрович 



Харків 2024
Мета: Вивчити основні методи рефакторингу коду на основі реальних прикладів

У рамках виконання завдання я створив презентацію на тему "Методи рефакторингу коду програмного забезпечення", де розглянув основні підходи до покращення якості коду та їх значення для ефективної підтримки програмного забезпечення.
Я вибрав мову C++, оскільки вона є однією з найпоширеніших у розробці програмного забезпечення та надає багатий набір інструментів для рефакторингу. Презентація охоплює такі ключові аспекти:
1.	Вступ — я пояснив, що таке рефакторинг і чому він є важливою частиною життєвого циклу програмного забезпечення. Було розглянуто основні цілі рефакторингу: покращення читабельності, зменшення складності, підвищення підтримуваності та зниження ризику помилок.
2.	Методи рефакторингу — я детально описав три основні методи:
o	Extract Method — виділення логічно пов’язаних частин коду в окремий метод для підвищення модульності та зручності тестування.
o	Rename Method — зміна назв методів і змінних на більш зрозумілі для поліпшення читабельності коду.
o	Replace Conditional with Polymorphism — заміна умовних операторів на поліморфізм для спрощення логіки та дотримання принципу відкритості/закритості.
3.	Практичні приклади — я показав, як кожен із методів рефакторингу допомагає розв'язати типові проблеми коду, такі як довгі методи, дублювання коду та складна умовна логіка.
4.	Інструменти для рефакторингу у C++ — я розглянув популярні інструменти, такі як CLion та Visual Studio, які допомагають автоматизувати багато процесів рефакторингу та підвищують ефективність роботи з кодом.
5.	Висновки — я узагальнив, як застосування методів рефакторингу дозволяє створювати якісний, зрозумілий і підтримуваний код.
У результаті, я висвітлив основні принципи рефакторингу коду, показав, як вони застосовуються на практиці, та надав рекомендації щодо використання інструментів для спрощення цього процесу.
Висновок: У результаті виконання роботи я дослідив основні методи рефакторингу коду, їхню важливість для забезпечення якості програмного забезпечення та практичне застосування для вирішення проблем у коді. Використання мови C++ дозволило показати реальні приклади та підкреслити актуальність рефакторингу в сучасній розробці.


Посилання на ютуб: https://www.youtube.com/watch?v=CFlIJELiWZQ






















ДОДАТОК А
 
 
 
 

 
 
 
 
 
 
 
 
